version: "3.5"
services:
  database:
    image: amsterdam/postgres11
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: waarnemingen_mensen
      POSTGRES_USER: waarnemingen_mensen
      POSTGRES_PASSWORD: insecure

  app:
    build:
      context: .
      args:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
    volumes:
      - ./src:/app
    links:
      - database
    ports:
      - "8001:8001"
    environment:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
      - DATABASE_NAME=waarnemingen_mensen
      - DATABASE_HOST=database
      - DATABASE_USER=waarnemingen_mensen
      - DATABASE_PASSWORD=insecure
      - UWSGI_HTTP=0.0.0.0:8001
      - UWSGI_MASTER=1
      - UWSGI_STATIC_INDEX=index.html
      - UWSGI_STATIC_MAP=/mensen/static=/static
      - UWSGI_CALLABLE=application
      - UWSGI_VACUUM=1
      - UWSGI_STATIC_EXPIRES=/* 3600
      - UWSGI_OFFLOAD_THREADS=1
      - UWSGI_HARAKIRI=15
      - UWSGI_DIE_ON_TERM=1
      - UWSGI_MODULE=settings.wsgi:application
      - UWSGI_PY_AUTORELOAD=1

  test:
    build:
      context: .
      target: tests
      args:
        - SECRET_KEY=dev
        - AUTHORIZATION_TOKEN=auth-token
        - GET_AUTHORIZATION_TOKEN=get-auth-token
    volumes:
      - ./src:/src
      - ./tests:/tests
      - ./deploy:/deploy
    environment:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
      - DATABASE_NAME=waarnemingen_mensen
      - DATABASE_HOST=database
      - DATABASE_USER=waarnemingen_mensen
      - DATABASE_PASSWORD=insecure
      - UWSGI_HTTP=0.0.0.0:8001
      - UWSGI_MASTER=1
      - UWSGI_STATIC_INDEX=index.html
      - UWSGI_STATIC_MAP=/mensen/static=/static
      - UWSGI_CALLABLE=application
      - UWSGI_VACUUM=1
      - UWSGI_STATIC_EXPIRES=/* 3600
      - UWSGI_OFFLOAD_THREADS=1
      - UWSGI_HARAKIRI=15
      - UWSGI_DIE_ON_TERM=1
      - UWSGI_MODULE=settings.wsgi:application
      - UWSGI_PY_AUTORELOAD=1
    depends_on:
      - database
    entrypoint: /deploy/wait-for-it.sh database:5432 --

  locust:
    build:
      context: .
      dockerfile: Dockerfile_locust
    volumes:
      - ./reports:/opt/reports
      - ./:/opt/src
    links:
      - app
    environment:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
    command: bash -c "locust -f /opt/src/locustfile.py --host=http://app:8001 --headless --users 250 --hatch-rate 25 --run-time 1m"

