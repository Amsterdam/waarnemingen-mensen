version: "3.5"
services:
  database:
    image: amsterdam/postgres11
    ports:
      - 5432
    environment:
      POSTGRES_DB: waarnemingen_mensen
      POSTGRES_USER: waarnemingen_mensen
      POSTGRES_PASSWORD: insecure

  x-app: &base-app
    build:
      context: .
      target: app
    depends_on:
      - database
    volumes:
      - ./src:/src
      - ./tests:/tests
      - ./deploy:/deploy
    environment: &base-app-env
      SECRET_KEY: "insecure"
      DEBUG: "true"
      AUTHORIZATION_TOKEN: "auth-token"
      GET_AUTHORIZATION_TOKEN: "get-auth-token"
    entrypoint: /deploy/wait-for-it.sh database:5432 --

  dev:
    <<: *base-app
    build:
      context: .
      target: dev
    command: python manage.py runserver 0.0.0.0:8000

  app:
    <<: *base-app
    build:
      context: .
      target: app
    image: docker-registry.data.amsterdam.nl/datapunt/waarnemingen-mensen:${VERSION:-latest}
    command: /deploy/docker-run.sh


  test:
    <<: *base-app
    build:
      context: .
      target: tests
    environment:
      <<: *base-app-env
      DJANGO_SETTINGS_MODULE: "main.settings"

  locust:
    build:
      context: .
      dockerfile: Dockerfile_locust
    volumes:
      - ./reports:/opt/reports
      - ./:/opt/src
    links:
      - app
    environment:
      SECRET_KEY: "insecure"
      AUTHORIZATION_TOKEN: "auth-token"
      GET_AUTHORIZATION_TOKEN: "get-auth-token"
    command: bash -c "locust -f /opt/src/locustfile.py --host=http://app:8001 --headless --users 250 --hatch-rate 25 --run-time 1m"

