version: "3.5"
services:
  database:
    image: amsterdam/postgres11
    ports:
      - 5432
    environment:
      POSTGRES_DB: waarnemingen_mensen
      POSTGRES_USER: waarnemingen_mensen
      POSTGRES_PASSWORD: insecure

  app:
    build:
      context: .
      target: app
      args:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
    image: docker-registry.data.amsterdam.nl/datapunt/waarnemingen-mensen:${VERSION:-latest}
    volumes:
      - ./src:/src
    links:
      - database
    ports:
      - 8001
    environment:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token

  test:
    build:
      context: .
      target: tests
      args:
        - SECRET_KEY=dev
        - AUTHORIZATION_TOKEN=auth-token
        - GET_AUTHORIZATION_TOKEN=get-auth-token
    volumes:
      - ./src:/src
      - ./tests:/tests
      - ./deploy:/deploy
    environment:
      - DJANGO_SETTINGS_MODULE=main.settings
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
    depends_on:
      - database
    entrypoint: /deploy/wait-for-it.sh database:5432 --

  locust:
    build:
      context: .
      dockerfile: Dockerfile_locust
    volumes:
      - ./reports:/opt/reports
      - ./:/opt/src
    links:
      - app
    environment:
      - SECRET_KEY=dev
      - AUTHORIZATION_TOKEN=auth-token
      - GET_AUTHORIZATION_TOKEN=get-auth-token
    command: bash -c "locust -f /opt/src/locustfile.py --host=http://app:8001 --headless --users 250 --hatch-rate 25 --run-time 1m"

